{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nvar _hoisted_1 = {\n  class: \"details\"\n};\nvar _hoisted_2 = {\n  class: \"details\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.user, function (user) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: user.id\n    }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h3\", null, _toDisplayString(user.fullname), 1\n    /* TEXT */\n    ), _createElementVNode(\"h3\", null, _toDisplayString(user.nric), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(user.dob), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(user.email), 1\n    /* TEXT */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.visit, function (visit) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: visit.id\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString(visit.date), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(visit.docNote), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(visit.docName), 1\n    /* TEXT */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"sources":["D:\\Laragon\\www\\osemsalmonv3\\src\\views\\patientRecord.vue"],"names":[],"mappings":";;EAGa,KAAK,EAAC;;;EAQN,KAAK,EAAC;;;gFATf,mBAAA,CAOK,SAPL,EAOK,IAPL,EAOK,WAAA,CAPc,MAAA,CAAA,IAOd,EAPkB,UAAZ,IAAY,EAAR;yBAAf,mBAAA,CAOK,IAPL,EAOK;MAPqB,GAAG,EAAE,IAAI,CAAC;IAO/B,CAPL,E,CACI,mBAAA,CAKM,KALN,EAAA,UAAA,EAKM,CAJF,mBAAA,CAA4B,IAA5B,EAA4B,IAA5B,EAA4B,gBAAA,CAArB,IAAI,CAAC,QAAgB,CAA5B,EAAoB;IAAA;IAApB,CAIE,EAHF,mBAAA,CAAwB,IAAxB,EAAwB,IAAxB,EAAwB,gBAAA,CAAjB,IAAI,CAAC,IAAY,CAAxB,EAAgB;IAAA;IAAhB,CAGE,EAFF,mBAAA,CAAqB,GAArB,EAAqB,IAArB,EAAqB,gBAAA,CAAf,IAAI,CAAC,GAAU,CAArB,EAAc;IAAA;IAAd,CAEE,EADF,mBAAA,CAAuB,GAAvB,EAAuB,IAAvB,EAAuB,gBAAA,CAAjB,IAAI,CAAC,KAAY,CAAvB,EAAgB;IAAA;IAAhB,CACE,CALN,C,CADJ,C;GAOK,CAPL,E;;EAAA,C,sBAQA,mBAAA,CAMK,SANL,EAMK,IANL,EAMK,WAAA,CANe,MAAA,CAAA,KAMf,EANoB,UAAd,KAAc,EAAT;yBAAhB,mBAAA,CAMK,IANL,EAMK;MANuB,GAAG,EAAE,KAAK,CAAC;IAMlC,CANL,E,CACI,mBAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAHF,mBAAA,CAAuB,GAAvB,EAAuB,IAAvB,EAAuB,gBAAA,CAAjB,KAAK,CAAC,IAAW,CAAvB,EAAgB;IAAA;IAAhB,CAGE,EAFF,mBAAA,CAA0B,GAA1B,EAA0B,IAA1B,EAA0B,gBAAA,CAApB,KAAK,CAAC,OAAc,CAA1B,EAAmB;IAAA;IAAnB,CAEE,EADF,mBAAA,CAA0B,GAA1B,EAA0B,IAA1B,EAA0B,gBAAA,CAApB,KAAK,CAAC,OAAc,CAA1B,EAAmB;IAAA;IAAnB,CACE,CAJN,C,CADJ,C;GAMK,CANL,E;;EAAA,C","sourcesContent":["<template>\r\n\r\n    <li v-for=\"user in user\" :key=\"user.id\">\r\n        <div class=\"details\">\r\n            <h3>{{ user.fullname }}</h3>\r\n            <h3>{{ user.nric }}</h3>\r\n            <p>{{ user.dob }}</p>\r\n            <p>{{ user.email }}</p>\r\n        </div>\r\n    </li>\r\n    <li v-for=\"visit in visit\" :key=\"visit.id\">\r\n        <div class=\"details\">\r\n            <p>{{ visit.date }}</p>\r\n            <p>{{ visit.docNote }}</p>\r\n            <p>{{ visit.docName }}</p>\r\n        </div>\r\n    </li>\r\n</template>\r\n\r\n<script>\r\nvar patientNRIC = window.location.pathname.split(\"/\").pop()\r\nconsole.log(patientNRIC)\r\n\r\nimport getCollection from \"../composables/getCollection\"\r\n\r\nexport default {\r\n    setup() {\r\n        const { documents: visit } = getCollection(\r\n            'visit',\r\n            ['nric', '==', patientNRIC]\r\n            )\r\n\r\n        const { documents: user } = getCollection(\r\n            'user',\r\n            ['nric', '==', patientNRIC]\r\n            )\r\n\r\n        const handleUpdate = (visit) => {\r\n            \r\n        }\r\n\r\n        return { visit, user, handleUpdate }\r\n    },\r\n\r\n    mounted() {\r\n        if (localStorage.getItem('reloaded')) {\r\n            // The page was just reloaded. Clear the value from local storage\r\n            // so that it will reload the next time this page is visited.\r\n            localStorage.removeItem('reloaded');\r\n        } else {\r\n            // Set a flag so that we know not to reload the page twice.\r\n            localStorage.setItem('reloaded', '1');\r\n            location.reload();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}