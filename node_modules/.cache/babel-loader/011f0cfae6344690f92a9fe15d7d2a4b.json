{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { ref } from \"vue\";\nimport { getStorage, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nexport default {\n  setup: function setup() {\n    var storage = getStorage();\n    var metadata = {\n      contentType: \"image/jpeg\"\n    };\n    var storageRef = ref(storage, \"images/\" + file.name);\n    var uploadTask = uploadBytesResumable(storageRef, file, metadata);\n    uploadTask.on(\"state_changed\", function (snapshot) {\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log(\"Upload is \" + progress + \"% done\");\n\n      switch (snapshot.state) {\n        case \"paused\":\n          console.log(\"Upload is paused\");\n          break;\n\n        case \"running\":\n          console.log(\"Upload is running\");\n          break;\n      }\n    }, function (error) {\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n        case \"storage/unauthorized\":\n          // User doesn't have permission to access the object\n          break;\n\n        case \"storage/canceled\":\n          // User canceled the upload\n          break;\n        // ...\n\n        case \"storage/unknown\":\n          // Unknown error occurred, inspect error.serverResponse\n          break;\n      }\n    }, function () {\n      // Upload completed successfully, now we can get the download URL\n      getDownloadURL(uploadTask.snapshot.ref).then(function (downloadURL) {\n        console.log(\"File available at\", downloadURL);\n      });\n    });\n  }\n};","map":{"version":3,"sources":["D:\\Laragon\\www\\Osem-Salmon-PRS\\src\\views\\userProfile.vue"],"names":[],"mappings":";AAwBA,SAAS,GAAT,QAAoB,KAApB;AACA,SACE,UADF,EAEE,oBAFF,EAGE,cAHF,QAIO,kBAJP;AAMA,eAAe;EACb,KADa,mBACL;IACN,IAAM,OAAM,GAAI,UAAU,EAA1B;IAEA,IAAM,QAAO,GAAI;MACf,WAAW,EAAE;IADE,CAAjB;IAIA,IAAM,UAAS,GAAI,GAAG,CAAC,OAAD,EAAU,YAAY,IAAI,CAAC,IAA3B,CAAtB;IACA,IAAM,UAAS,GAAI,oBAAoB,CAAC,UAAD,EAAa,IAAb,EAAmB,QAAnB,CAAvC;IACA,UAAU,CAAC,EAAX,CACE,eADF,EAEE,UAAC,QAAD,EAAc;MACZ;MACA,IAAM,QAAO,GACV,QAAQ,CAAC,gBAAT,GAA4B,QAAQ,CAAC,UAAtC,GAAoD,GADtD;MAEA,OAAO,CAAC,GAAR,CAAY,eAAe,QAAf,GAA0B,QAAtC;;MACA,QAAQ,QAAQ,CAAC,KAAjB;QACE,KAAK,QAAL;UACE,OAAO,CAAC,GAAR,CAAY,kBAAZ;UACA;;QACF,KAAK,SAAL;UACE,OAAO,CAAC,GAAR,CAAY,mBAAZ;UACA;MANJ;IAQD,CAfH,EAgBE,UAAC,KAAD,EAAW;MACT;MACA;MACA,QAAQ,KAAK,CAAC,IAAd;QACE,KAAK,sBAAL;UACE;UACA;;QACF,KAAK,kBAAL;UACE;UACA;QAEF;;QAEA,KAAK,iBAAL;UACE;UACA;MAZJ;IAcD,CAjCH,EAkCE,YAAM;MACJ;MACA,cAAc,CAAC,UAAU,CAAC,QAAX,CAAoB,GAArB,CAAd,CAAwC,IAAxC,CAA6C,UAAC,WAAD,EAAiB;QAC5D,OAAO,CAAC,GAAR,CAAY,mBAAZ,EAAiC,WAAjC;MACD,CAFD;IAGF,CAvCF;EAyCD;AAnDY,CAAf","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"display-6\">User Profile</h1>\r\n    <hr />\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col\">profile picture</div>\r\n      <div class=\"col\">\r\n        <form @submit.prevent=\"handleSubmit\">\r\n          <input type=\"file\" @change=\"handleChange\" />\r\n          <button class=\"btn btn-primary\">submit</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"col\">col3</div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col\">full name</div>\r\n      <div class=\"col\">email</div>\r\n      <div class=\"col\">phone</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport {\r\n  getStorage,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n} from \"firebase/storage\";\r\n\r\nexport default {\r\n  setup() {\r\n    const storage = getStorage();\r\n\r\n    const metadata = {\r\n      contentType: \"image/jpeg\",\r\n    };\r\n\r\n    const storageRef = ref(storage, \"images/\" + file.name);\r\n    const uploadTask = uploadBytesResumable(storageRef, file, metadata);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log(\"Upload is \" + progress + \"% done\");\r\n        switch (snapshot.state) {\r\n          case \"paused\":\r\n            console.log(\"Upload is paused\");\r\n            break;\r\n          case \"running\":\r\n            console.log(\"Upload is running\");\r\n            break;\r\n        }\r\n      },\r\n      (error) => {\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n        switch (error.code) {\r\n          case \"storage/unauthorized\":\r\n            // User doesn't have permission to access the object\r\n            break;\r\n          case \"storage/canceled\":\r\n            // User canceled the upload\r\n            break;\r\n\r\n          // ...\r\n\r\n          case \"storage/unknown\":\r\n            // Unknown error occurred, inspect error.serverResponse\r\n            break;\r\n        }\r\n      },\r\n      () => {\r\n        // Upload completed successfully, now we can get the download URL\r\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n          console.log(\"File available at\", downloadURL);\r\n        });\r\n      }\r\n    );\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}