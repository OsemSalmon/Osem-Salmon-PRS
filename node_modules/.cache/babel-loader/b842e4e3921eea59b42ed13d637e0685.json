{"ast":null,"code":"import _asyncToGenerator from \"D:/Laragon/www/Osem-Salmon-PRS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { ref } from \"vue\";\nimport { db } from \"../firebase/config\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { storage } from \"../firebase/config\";\n\nvar useStorage = function useStorage() {\n  var error = ref(null);\n  var url = ref(null);\n  var filePath = ref(null);\n\n  var uploadImage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file) {\n      var storageRef, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              filePath.value = \"patientImage/\".concat(nric.value, \"/\").concat(file.name);\n              storageRef = projectStorage.ref(filePath.value);\n              _context.prev = 2;\n              _context.next = 5;\n              return storageRef.put(file);\n\n            case 5:\n              res = _context.sent;\n              url.value = res.ref.getDownloadURL();\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0.message);\n              error.value = _context.t0.message;\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function uploadImage(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    error: error,\n    url: url,\n    filePath: filePath,\n    uploadImage: uploadImage\n  };\n};\n\nexport default {\n  setup: function setup() {\n    var _useStorage = useStorage(),\n        url = _useStorage.url,\n        filePath = _useStorage.filePath,\n        uploadImage = _useStorage.uploadImage; //patient info const\n\n\n    var fullname = ref(\"\");\n    var email = ref(\"\");\n    var dob = ref(\"\");\n    var nric = ref(\"\");\n    var note = ref(\"\"); //image const\n\n    var file = ref(null);\n    var fileError = ref(null); //allowed file types for upload\n\n    var types = ['image/png', 'image/jpeg', 'image/jpg'];\n\n    var handleChange = function handleChange(e) {\n      var selected = e.target.files[0];\n      console.log(selected);\n\n      if (selected && types.includes(selected.type)) {\n        file.value = selected;\n        fileError.value = null;\n      } else {\n        file.value = null;\n        fileError.value = \"Please select a valid image file (png, jpeg, jpg)\";\n      }\n    };\n\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var colRef;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                colRef = collection(db, \"user\");\n                _context2.next = 3;\n                return addDoc(colRef, {\n                  fullname: fullname.value,\n                  email: email.value,\n                  dob: dob.value,\n                  nric: nric.value,\n                  note: note.value\n                });\n\n              case 3:\n                _context2.next = 5;\n                return uploadImage(file.value);\n\n              case 5:\n                console.log('image uploaded, url: ', url.value);\n                fullname.value = \"\";\n                email.value = \"\";\n                dob.value = \"\";\n                nric.value = \"\";\n                note.value = \"\";\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function handleSubmit() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return {\n      handleSubmit: handleSubmit,\n      fullname: fullname,\n      email: email,\n      dob: dob,\n      nric: nric,\n      note: note,\n      handleChange: handleChange,\n      fileError: fileError\n    };\n  }\n};","map":{"version":3,"sources":["D:\\Laragon\\www\\Osem-Salmon-PRS\\src\\components\\CreateUserForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <form @submit.prevent=\"handleSubmit\">\n\n          <input type=\"file\" @change=\"handleChange\">\n          <div class=\"error\">{{ fileError }}</div>\n          <div class=\"form-floating mb-3\">\n            <input class=\"form-control\" type=\"text\" name=\"fullname\" v-model=\"fullname\" placeholder=\"fullname\" required />\n            <label for=\"title\" class=\"form-label\">Full Name</label>\n          </div>\n\n          <div class=\"form-floating mb-3\">\n            <input class=\"form-control\" type=\"text\" name=\"email\" v-model=\"email\" placeholder=\"email\" required />\n            <label for=\"email\" class=\"form-label\">Email</label>\n          </div>\n\n          <div class=\"form-floating mb-3\">\n            <input class=\"form-control\" type=\"date\" name=\"dob\" v-model=\"dob\" placeholder=\"Date of Birth\" required />\n            <label for=\"dob\" class=\"form-label\">Date of Birth</label>\n          </div>\n\n          <div class=\"form-floating mb-3\">\n            <input class=\"form-control\" type=\"text\" name=\"nric\" v-model=\"nric\" placeholder=\"NRIC\" required />\n            <label for=\"nric\" class=\"form-label\">NRIC</label>\n          </div>\n\n          <div class=\"form-floating mb-3\">\n            <textarea class=\"form-control\" name=\"note\" v-model=\"note\" placeholder=\"Note\" required></textarea>\n            <label for=\"note\" class=\"form-label\">Note</label>\n          </div>\n\n          <br>\n          <button class=\"btn btn-outline-success float-end\">Add Patient</button>\n          <!-- <div v-if=\"error\">\n      {{ error }}\n    </div> -->\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\"\nimport { db } from \"../firebase/config\"\nimport { addDoc, collection } from \"firebase/firestore\"\nimport { storage } from \"../firebase/config\"\n\nconst useStorage = () => {\n  const error = ref(null)\n  const url = ref(null)\n  const filePath = ref(null)\n\n  const uploadImage = async (file) => {\n    filePath.value = `patientImage/${nric.value}/${file.name}`\n    const storageRef = projectStorage.ref(filePath.value)\n\n    try {\n      const res = await storageRef.put(file)\n      url.value = res.ref.getDownloadURL()\n    }\n\n    catch(err) {\n      console.log(err.message)\n      error.value = err.message\n    }\n  }\n  \n  return { error, url, filePath, uploadImage }\n}\n\nexport default {\n  setup() {\n    const { url, filePath, uploadImage } = useStorage()\n    //patient info const\n    const fullname = ref(\"\")\n    const email = ref(\"\")\n    const dob = ref(\"\")\n    const nric = ref(\"\")\n    const note = ref(\"\")\n\n    //image const\n    const file = ref(null)\n    const fileError = ref(null)\n\n    //allowed file types for upload\n    const types = ['image/png', 'image/jpeg', 'image/jpg']\n\n    const handleChange = (e) => {\n      const selected = e.target.files[0]\n      console.log(selected)\n\n      if(selected  && types.includes(selected.type)) {\n        file.value = selected\n        fileError.value = null\n      }\n\n      else {\n        file.value = null\n        fileError.value = \"Please select a valid image file (png, jpeg, jpg)\"\n      }\n    }\n\n    const handleSubmit = async () => {\n      const colRef = collection(db, \"user\")\n\n      await addDoc(colRef, {\n        fullname: fullname.value,\n        email: email.value,\n        dob: dob.value,\n        nric: nric.value,\n        note: note.value,\n      })\n\n      await uploadImage(file.value)\n      console.log('image uploaded, url: ', url.value)\n\n      fullname.value = \"\"\n      email.value = \"\"\n      dob.value = \"\"\n      nric.value = \"\"\n      note.value = \"\"\n    }\n\n    return {\n      handleSubmit,\n      fullname,\n      email,\n      dob,\n      nric,\n      note,\n      handleChange,\n      fileError\n    }\n  }\n}\n</script>\n\n<style>\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}