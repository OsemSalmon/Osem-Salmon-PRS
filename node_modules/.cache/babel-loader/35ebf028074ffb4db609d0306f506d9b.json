{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Submit\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers(function () {\n      return _ctx.handleSubmit && _ctx.handleSubmit.apply(_ctx, arguments);\n    }, [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.pwd = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.pwd]]), _hoisted_1], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"sources":["D:\\Laragon\\www\\Osem-Salmon-PRS\\src\\components\\editUserPassword.vue"],"names":[],"mappings":";;8BAGI,mBAAA,CAAuB,QAAvB,EAAuB,IAAvB,EAAQ,QAAR,EAAc,CAAA;AAAA;AAAd,C;;;uBAFJ,mBAAA,CAGO,MAHP,EAGO;IAHA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA;MAAA,OAAU,IAAA,CAAA,YAAA,IAAA,IAAA,CAAA,YAAA,OAAA,IAAA,YAAV;IAAA,CAAA,EAAsB,CAAA,SAAA,CAAtB,CAAA;EAGN,CAHP,E,iBACI,mBAAA,CAAqC,OAArC,EAAqC;IAA9B,IAAI,EAAC,UAAyB;;aAAL,IAAA,CAAA,G,GAAG,M;;EAAE,CAArC,E,IAAA,E;;EAAA,C,iBAAgC,IAAA,CAAA,G,KAChC,U,CAFJ,E;;EAAA,C","sourcesContent":["<template>\r\n<form @submit.prevent=\"handleSubmit\">\r\n    <input type=\"password\" v-model=\"pwd\">\r\n    <button>Submit</button>\r\n</form>\r\n  \r\n\r\n</template>\r\n\r\n<script>\r\nimport { getAuth, updatePassword } from '@firebase/auth'\r\nimport { ref } from 'vue'\r\n\r\nexport default {\r\n    setup() {\r\n\r\n        const auth = getAuth()\r\n\r\n        const user = auth.currentUser\r\n\r\n        const pwd = ref(\"\")\r\n\r\n        const handleSubmit = async () => {\r\n            await updatePassword(user, pwd.value)\r\n            pwd.value = \"\"\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}