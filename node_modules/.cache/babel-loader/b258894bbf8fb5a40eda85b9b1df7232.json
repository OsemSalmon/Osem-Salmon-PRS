{"ast":null,"code":"import _asyncToGenerator from \"D:/Laragon/www/osemsalmonv3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nvar patientNRIC = window.location.pathname.split(\"/\").pop(); //console.log(patientNRIC)\n\nimport getCollection from \"../composables/getCollection\";\nimport { db } from \"../firebase/config\";\nimport { addDoc, collection } from \"firebase/firestore\";\nexport default {\n  setup: function setup() {\n    var _getCollection = getCollection('visit', ['nric', '==', patientNRIC]),\n        visit = _getCollection.documents;\n\n    var _getCollection2 = getCollection('user', ['nric', '==', patientNRIC]),\n        user = _getCollection2.documents;\n\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var colRef;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                colRef = collection(db, 'visit');\n                _context.next = 3;\n                return addDoc(colRef, {\n                  date: date.value,\n                  docName: docName.value,\n                  docNote: docNote.value,\n                  nric: nric.value\n                });\n\n              case 3:\n                date.value = '';\n                docName.value = '';\n                docNote.value = '';\n                nric.value = '';\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return {\n      visit: visit,\n      user: user,\n      handleSubmit: handleSubmit\n    };\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem('reloaded')) {\n      // The page was just reloaded. Clear the value from local storage\n      // so that it will reload the next time this page is visited.\n      localStorage.removeItem('reloaded');\n    } else {\n      // Set a flag so that we know not to reload the page twice.\n      localStorage.setItem('reloaded', '1');\n      location.reload();\n    }\n  }\n};","map":{"version":3,"sources":["D:\\Laragon\\www\\osemsalmonv3\\src\\views\\patientRecord.vue"],"names":[],"mappings":";;;;AA4CA,IAAI,WAAU,GAAI,MAAM,CAAC,QAAP,CAAgB,QAAhB,CAAyB,KAAzB,CAA+B,GAA/B,EAAoC,GAApC,EAAlB,C,CACA;;AAEA,OAAO,aAAP,MAA0B,8BAA1B;AAEA,SAAS,EAAT,QAAmB,oBAAnB;AACA,SAAS,MAAT,EAAiB,UAAjB,QAAmC,oBAAnC;AAEA,eAAe;EACX,KADW,mBACH;IACJ,qBAA6B,aAAa,CACtC,OADsC,EAEtC,CAAC,MAAD,EAAS,IAAT,EAAe,WAAf,CAFsC,CAA1C;IAAA,IAAmB,KAAnB,kBAAQ,SAAR;;IAKA,sBAA4B,aAAa,CACrC,MADqC,EAErC,CAAC,MAAD,EAAS,IAAT,EAAe,WAAf,CAFqC,CAAzC;IAAA,IAAmB,IAAnB,mBAAQ,SAAR;;IAKA,IAAM,YAAW;MAAA,mEAAI;QAAA;QAAA;UAAA;YAAA;cAAA;gBACX,MADW,GACF,UAAU,CAAC,EAAD,EAAK,OAAL,CADR;gBAAA;gBAAA,OAGX,MAAM,CAAC,MAAD,EAAS;kBACjB,IAAI,EAAE,IAAI,CAAC,KADM;kBAEjB,OAAO,EAAE,OAAO,CAAC,KAFA;kBAGjB,OAAO,EAAE,OAAO,CAAC,KAHA;kBAIjB,IAAI,EAAE,IAAI,CAAC;gBAJM,CAAT,CAHK;;cAAA;gBAUjB,IAAI,CAAC,KAAL,GAAa,EAAb;gBACA,OAAO,CAAC,KAAR,GAAgB,EAAhB;gBACA,OAAO,CAAC,KAAR,GAAgB,EAAhB;gBACA,IAAI,CAAC,KAAL,GAAa,EAAb;;cAbiB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAJ;;MAAA,gBAAX,YAAW;QAAA;MAAA;IAAA,GAAjB;;IAgBA,OAAO;MAAE,KAAK,EAAL,KAAF;MAAS,IAAI,EAAJ,IAAT;MAAe,YAAW,EAAX;IAAf,CAAP;EACH,CA7BU;EA+BX,OA/BW,qBA+BD;IACN,IAAI,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;MAClC;MACA;MACA,YAAY,CAAC,UAAb,CAAwB,UAAxB;IACJ,CAJA,MAIO;MACH;MACA,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAiC,GAAjC;MACA,QAAQ,CAAC,MAAT;IACJ;EACJ;AAzCW,CAAf","sourcesContent":["<template>\r\n    <ul class=\"list-group\">\r\n        <li class=\"list-group-item list-group-item-dark\" v-for=\"user in user\" :key=\"user.id\">\r\n            <div class=\"details\">\r\n                <span class=\"fs-2 fw-bold\">{{ user.fullname }}</span> \r\n                <span class=\"fs-3 fw-light ms-3\">{{ user.nric }}</span>\r\n                <br>\r\n                <span class=\"fs-4 fw-light\">{{ user.dob }}</span> \r\n                <span class=\"fs-4 fw-light ms-3\">{{ user.email }}</span>\r\n                \r\n            </div>\r\n        </li>\r\n    </ul>\r\n\r\n    <div class=\"accordion mt-1 mb-1\">\r\n        <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                Accordion Item #2\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\">\r\n                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <ul class=\"list-group\">\r\n        <li class=\"list-group-item list-group-item-light\" v-for=\"visit in visit\" :key=\"visit.id\">\r\n            <div class=\"details\">\r\n                <span class=\"fw-semibold\">Date:</span> <span class=\"fw-light\">{{ visit.date }}</span>\r\n                <br>\r\n                <span class=\"fw-semibold\">Note:</span> <span class=\"fw-light\">{{ visit.docNote }}</span>\r\n                <br>\r\n                <span class=\"fw-semibold\">Doctor:</span> <span class=\"fw-light\">{{ visit.docName }}</span>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</template>\r\n\r\n<script>\r\nvar patientNRIC = window.location.pathname.split(\"/\").pop()\r\n//console.log(patientNRIC)\r\n\r\nimport getCollection from \"../composables/getCollection\"\r\n\r\nimport { db } from \"../firebase/config\"\r\nimport { addDoc, collection } from \"firebase/firestore\"\r\n\r\nexport default {\r\n    setup() {\r\n        const { documents: visit } = getCollection(\r\n            'visit',\r\n            ['nric', '==', patientNRIC]\r\n            )\r\n\r\n        const { documents: user } = getCollection(\r\n            'user',\r\n            ['nric', '==', patientNRIC]\r\n            )\r\n\r\n        const handleSubmit = async () => {\r\n            const colRef = collection(db, 'visit')\r\n\r\n            await addDoc(colRef, {\r\n                date: date.value,\r\n                docName: docName.value,\r\n                docNote: docNote.value,\r\n                nric: nric.value\r\n            })\r\n\r\n            date.value = ''\r\n            docName.value = ''\r\n            docNote.value = ''\r\n            nric.value = ''\r\n        }\r\n\r\n        return { visit, user, handleSubmit }\r\n    },\r\n\r\n    mounted() {\r\n        if (localStorage.getItem('reloaded')) {\r\n            // The page was just reloaded. Clear the value from local storage\r\n            // so that it will reload the next time this page is visited.\r\n            localStorage.removeItem('reloaded');\r\n        } else {\r\n            // Set a flag so that we know not to reload the page twice.\r\n            localStorage.setItem('reloaded', '1');\r\n            location.reload();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}