{"ast":null,"code":"import _asyncToGenerator from \"D:/Laragon/www/Osem-Salmon-PRS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { ref } from 'vue';\nimport useStorage from '@/composables/useStorage';\nimport { storage } from '../firebase/config';\nimport { uploadBytes } from '@firebase/storage';\nexport default {\n  setup: function setup() {\n    //const { filePath, url, uploadImage } = useStorage()\n    var imageRef = ref(storage, 'mountains.jpg');\n    var file = ref(null);\n    var fileError = ref(null); //allowed file type\n\n    var types = ['image/jpeg', 'image/png', 'image/jpg'];\n\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                uploadBytes(imageRef, file).then(function () {\n                  console.log('uploaded');\n                }).catch(function (err) {\n                  console.log(err);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var handleChange = function handleChange(e) {\n      var selected = e.target.files[0];\n\n      if (selected && types.includes(selected.type)) {\n        file.value = selected;\n      } else {\n        file.value = null;\n        fileError.value = 'Invalid file type!';\n      }\n    };\n\n    return {\n      handleChange: handleChange,\n      file: file,\n      fileError: fileError,\n      handleSubmit: handleSubmit\n    };\n  }\n};","map":{"version":3,"sources":["D:\\Laragon\\www\\Osem-Salmon-PRS\\src\\views\\userProfile.vue"],"names":[],"mappings":";;;AA0BA,SAAS,GAAT,QAAoB,KAApB;AACA,OAAO,UAAP,MAAuB,0BAAvB;AACA,SAAS,OAAT,QAAwB,oBAAxB;AACA,SAAS,WAAT,QAA4B,mBAA5B;AAEA,eAAe;EACb,KADa,mBACL;IACN;IACA,IAAM,QAAO,GAAI,GAAG,CAAC,OAAD,EAAU,eAAV,CAApB;IACA,IAAM,IAAG,GAAI,GAAG,CAAC,IAAD,CAAhB;IACA,IAAM,SAAQ,GAAI,GAAG,CAAC,IAAD,CAArB,CAJM,CAKN;;IACA,IAAM,KAAI,GAAI,CAAC,YAAD,EAAe,WAAf,EAA4B,WAA5B,CAAd;;IAEA,IAAM,YAAW;MAAA,mEAAI;QAAA;UAAA;YAAA;cAAA;gBACnB,WAAW,CAAC,QAAD,EAAW,IAAX,CAAX,CAA4B,IAA5B,CAAiC,YAAM;kBACrC,OAAO,CAAC,GAAR,CAAY,UAAZ;gBACD,CAFD,EAEG,KAFH,CAES,UAAA,GAAE,EAAK;kBACd,OAAO,CAAC,GAAR,CAAY,GAAZ;gBACD,CAJD;;cADmB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAJ;;MAAA,gBAAX,YAAW;QAAA;MAAA;IAAA,GAAjB;;IAQA,IAAM,YAAW,GAAI,SAAf,YAAe,CAAC,CAAD,EAAO;MAC1B,IAAM,QAAO,GAAI,CAAC,CAAC,MAAF,CAAS,KAAT,CAAe,CAAf,CAAjB;;MAEA,IAAI,QAAO,IAAK,KAAK,CAAC,QAAN,CAAe,QAAQ,CAAC,IAAxB,CAAhB,EAA+C;QAC7C,IAAI,CAAC,KAAL,GAAa,QAAb;MACF,CAFA,MAIK;QACH,IAAI,CAAC,KAAL,GAAa,IAAb;QACA,SAAS,CAAC,KAAV,GAAkB,oBAAlB;MACF;IACF,CAXA;;IAaA,OAAO;MACL,YAAY,EAAZ,YADK;MACS,IAAI,EAAJ,IADT;MACe,SAAS,EAAT,SADf;MAC0B,YAAY,EAAZ;IAD1B,CAAP;EAGF;AAjCa,CAAf","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"display-6\">User Profile</h1>\r\n    <hr>\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col\">profile picture</div>\r\n      <div class=\"col\">\r\n        <form @submit.prevent=\"handleSubmit\">\r\n          <input type=\"file\" @change=\"handleChange\">\r\n          {{ fileError }}\r\n          <button class=\"btn btn-primary\">submit</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"col\">col3</div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col\">full name</div>\r\n      <div class=\"col\">email</div>\r\n      <div class=\"col\">phone</div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport useStorage from '@/composables/useStorage'\r\nimport { storage } from '../firebase/config'\r\nimport { uploadBytes } from '@firebase/storage'\r\n\r\nexport default {\r\n  setup() {\r\n    //const { filePath, url, uploadImage } = useStorage()\r\n    const imageRef = ref(storage, 'mountains.jpg')\r\n    const file = ref(null)\r\n    const fileError = ref(null)\r\n    //allowed file type\r\n    const types = ['image/jpeg', 'image/png', 'image/jpg']\r\n\r\n    const handleSubmit = async () => {\r\n      uploadBytes(imageRef, file).then(() => {\r\n        console.log('uploaded')\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n      const selected = e.target.files[0]\r\n\r\n      if (selected && types.includes(selected.type)) {\r\n        file.value = selected\r\n      }\r\n\r\n      else {\r\n        file.value = null\r\n        fileError.value = 'Invalid file type!'\r\n      }\r\n    }\r\n\r\n    return {\r\n      handleChange, file, fileError, handleSubmit,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}