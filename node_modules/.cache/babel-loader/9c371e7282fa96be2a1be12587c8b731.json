{"ast":null,"code":"import _asyncToGenerator from \"D:/Laragon/www/Osem-Salmon-PRS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { ref } from 'vue';\nimport useStorage from '@/composables/useStorage';\nexport default {\n  setup: function setup() {\n    var _useStorage = useStorage(),\n        filePath = _useStorage.filePath,\n        url = _useStorage.url,\n        uploadImage = _useStorage.uploadImage;\n\n    var file = ref(null);\n    var fileError = ref(null); //allowed file type\n\n    var types = ['image/jpeg', 'image/png', 'image/jpg'];\n\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!file.value) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return uploadImage(file.value);\n\n              case 3:\n                console.log('Image uploaded, url:' + url.value);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var handleChange = function handleChange(e) {\n      var selected = e.target.files[0];\n\n      if (selected && types.includes(selected.type)) {\n        file.value = selected;\n      } else {\n        file.value = null;\n        fileError.value = 'Invalid file type!';\n      }\n    };\n\n    return {\n      handleChange: handleChange,\n      file: file,\n      fileError: fileError,\n      handleSubmit: handleSubmit,\n      filePath: filePath\n    };\n  }\n};","map":{"version":3,"sources":["D:\\Laragon\\www\\Osem-Salmon-PRS\\src\\views\\userProfile.vue"],"names":[],"mappings":";;;AA0BA,SAAS,GAAT,QAAoB,KAApB;AACA,OAAO,UAAP,MAAuB,0BAAvB;AAEA,eAAe;EACb,KADa,mBACL;IACN,kBAAuC,UAAU,EAAjD;IAAA,IAAQ,QAAR,eAAQ,QAAR;IAAA,IAAkB,GAAlB,eAAkB,GAAlB;IAAA,IAAuB,WAAvB,eAAuB,WAAvB;;IAEA,IAAM,IAAG,GAAI,GAAG,CAAC,IAAD,CAAhB;IACA,IAAM,SAAQ,GAAI,GAAG,CAAC,IAAD,CAArB,CAJM,CAKN;;IACA,IAAM,KAAI,GAAI,CAAC,YAAD,EAAe,WAAf,EAA4B,WAA5B,CAAd;;IAEA,IAAM,YAAW;MAAA,mEAAI;QAAA;UAAA;YAAA;cAAA;gBAAA,KACd,IAAI,CAAC,KADS;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAET,WAAW,CAAC,IAAI,CAAC,KAAN,CAFF;;cAAA;gBAGf,OAAO,CAAC,GAAR,CAAY,yBAAyB,GAAG,CAAC,KAAzC;;cAHe;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAJ;;MAAA,gBAAX,YAAW;QAAA;MAAA;IAAA,GAAjB;;IAOA,IAAM,YAAW,GAAI,SAAf,YAAe,CAAC,CAAD,EAAO;MAC1B,IAAM,QAAO,GAAI,CAAC,CAAC,MAAF,CAAS,KAAT,CAAe,CAAf,CAAjB;;MAIA,IAAI,QAAO,IAAK,KAAK,CAAC,QAAN,CAAe,QAAQ,CAAC,IAAxB,CAAhB,EAA+C;QAC7C,IAAI,CAAC,KAAL,GAAa,QAAb;MACF,CAFA,MAIK;QACH,IAAI,CAAC,KAAL,GAAa,IAAb;QACA,SAAS,CAAC,KAAV,GAAkB,oBAAlB;MACF;IACF,CAbA;;IAeA,OAAO;MACL,YAAY,EAAZ,YADK;MACS,IAAI,EAAJ,IADT;MACe,SAAS,EAAT,SADf;MAC0B,YAAY,EAAZ,YAD1B;MACwC,QAAO,EAAP;IADxC,CAAP;EAGF;AAlCa,CAAf","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"display-6\">User Profile</h1>\r\n    <hr>\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col\">profile picture</div>\r\n      <div class=\"col\">\r\n        <form @submit.prevent=\"handleSubmit\">\r\n          <input type=\"file\" @change=\"handleChange\">\r\n          {{ fileError }}\r\n          <button class=\"btn btn-primary\">submit</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"col\">col3</div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col\">full name</div>\r\n      <div class=\"col\">email</div>\r\n      <div class=\"col\">phone</div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport useStorage from '@/composables/useStorage'\r\n\r\nexport default {\r\n  setup() {\r\n    const { filePath, url, uploadImage } = useStorage()\r\n\r\n    const file = ref(null)\r\n    const fileError = ref(null)\r\n    //allowed file type\r\n    const types = ['image/jpeg', 'image/png', 'image/jpg']\r\n\r\n    const handleSubmit = async () => {\r\n        if(file.value){\r\n          await uploadImage(file.value)\r\n          console.log('Image uploaded, url:' + url.value)\r\n        }\r\n      }\r\n\r\n    const handleChange = (e) => {\r\n      const selected = e.target.files[0]\r\n\r\n      \r\n\r\n      if (selected && types.includes(selected.type)) {\r\n        file.value = selected\r\n      }\r\n\r\n      else {\r\n        file.value = null\r\n        fileError.value = 'Invalid file type!'\r\n      }\r\n    }\r\n\r\n    return {\r\n      handleChange, file, fileError, handleSubmit, filePath\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}