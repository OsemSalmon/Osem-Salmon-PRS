{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Login\", -1\n/* HOISTED */\n);\n\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"form-label\"\n}, \"Email\", -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\",\n  class: \"form-label\"\n}, \"Password\", -1\n/* HOISTED */\n);\n\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Login\", -1\n/* HOISTED */\n);\n\nvar _hoisted_5 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers(function () {\n      return $setup.handleSubmit && $setup.handleSubmit.apply($setup, arguments);\n    }, [\"prevent\"]))\n  }, [_hoisted_1, _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.email = $event;\n    }),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.email]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.password = $event;\n    }),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.password]]), _hoisted_4, $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($setup.error), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"sources":["D:\\Laragon\\www\\osemsalmonv3\\src\\views\\Login.vue"],"names":[],"mappings":";;8BAEI,mBAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS,CAAA;AAAA;AAAT,C;;8BAEA,mBAAA,CAAmD,OAAnD,EAAmD;EAA5C,GAAG,EAAC,OAAwC;EAAhC,KAAK,EAAC;AAA0B,CAAnD,EAAsC,OAAtC,EAA2C,CAAA;AAAA;AAA3C,C;;8BAGA,mBAAA,CAAyD,OAAzD,EAAyD;EAAlD,GAAG,EAAC,UAA8C;EAAnC,KAAK,EAAC;AAA6B,CAAzD,EAAyC,UAAzC,EAAiD,CAAA;AAAA;AAAjD,C;;8BAGA,mBAAA,CAAsB,QAAtB,EAAsB,IAAtB,EAAQ,OAAR,EAAa,CAAA;AAAA;AAAb,C;;;;;;uBATF,mBAAA,CAWO,MAXP,EAWO;IAXA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA;MAAA,OAAU,MAAA,CAAA,YAAA,IAAA,MAAA,CAAA,YAAA,OAAA,MAAA,YAAV;IAAA,CAAA,EAAsB,CAAA,SAAA,CAAtB,CAAA;EAWN,CAXP,E,CACE,U,EAEA,U,kBACA,mBAAA,CAA+E,OAA/E,EAA+E;IAAxE,IAAI,EAAC,OAAmE;IAA3D,IAAI,EAAC,OAAsD;;aAArC,MAAA,CAAA,K,GAAK,M;MAAgC;IAA9B,KAAK,EAAC,cAAwB;IAAT,QAAQ,EAAR;EAAS,CAA/E,E,IAAA,E;;EAAA,C,iBAA0C,MAAA,CAAA,K,KAE1C,U,kBACA,mBAAA,CAAwF,OAAxF,EAAwF;IAAjF,IAAI,EAAC,UAA4E;IAAjE,IAAI,EAAC,UAA4D;;aAAxC,MAAA,CAAA,Q,GAAQ,M;MAAgC;IAA9B,KAAK,EAAC,cAAwB;IAAT,QAAQ,EAAR;EAAS,CAAxF,E,IAAA,E;;EAAA,C,iBAAgD,MAAA,CAAA,Q,KAEhD,U,EACW,MAAA,CAAA,K,kBAAX,mBAAA,CAAmC,KAAnC,EAAmC,UAAnC,EAAmC,gBAAA,CAAd,MAAA,CAAA,KAAc,CAAnC,EAA0B;EAAA;EAA1B,C,sCAVF,E;;EAAA,C","sourcesContent":["<template>\n  <form @submit.prevent=\"handleSubmit\">\n    <h2>Login</h2>\n\n    <label for=\"email\" class=\"form-label\">Email</label>\n    <input type=\"email\" name=\"email\" v-model=\"email\" class=\"form-control\" required>\n\n    <label for=\"password\" class=\"form-label\">Password</label>\n    <input type=\"password\" name=\"password\" v-model=\"password\" class=\"form-control\" required>\n\n    <button>Login</button>\n    <div v-if=\"error\">{{ error }}</div>\n  </form>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport useLogin from '../composables/useLogin'\n\nexport default {\n  setup() {\n    const email = ref('')\n    const password = ref('')\n\n    const { login, error } = useLogin()\n    const router = useRouter()\n\n    const handleSubmit = async () => {\n      await login(email.value, password.value)\n\n      if(!error.value) {\n        router.push('/')\n      }\n    }\n\n    return { email, password, handleSubmit, error }\n  }\n}\n</script>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}